<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <system.webServer>
    <handlers>
      <add name="iisnode" path="backend/server.js" verb="*" modules="iisnode" />
    </handlers>
    <rewrite>
      <rules>
        <!-- Don't interfere with requests for node-inspector debugging -->
        <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
          <match url="^backend/server.js\/debug[\/]?" />
        </rule>

        <!-- First we consider whether the incoming URL matches a physical file in the /public folder -->
        <rule name="StaticContent">
          <action type="Rewrite" url="public{REQUEST_URI}" />
        </rule>

        <!-- All other URLs for API routes are mapped to the Node.js app -->
        <rule name="DynamicContent-API">
          <conditions>
            <add input="{REQUEST_URI}" pattern="^/api" />
          </conditions>
          <action type="Rewrite" url="backend/server.js" />
        </rule>

        <!-- Serve static files directly -->
        <rule name="StaticFiles">
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="False" />
          </conditions>
          <action type="None" />
        </rule>

        <!-- For other requests, try matching a file first -->
        <rule name="ClientFallback">
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True" />
          </conditions>
          <action type="Rewrite" url="index.html" />
        </rule>
      </rules>
    </rewrite>

    <!-- Ensure the Node.js app has enough memory and doesn't time out too quickly -->
    <iisnode 
             watchedFiles="web.config;*.js"
             loggingEnabled="true"
             logDirectory="iisnode"
             debuggingEnabled="false"
             maxNamedPipeConnectionRetry="100"
             namedPipeConnectionRetryDelay="250"
             maxProcessCountPerApplication="1"
             maxConcurrentRequestsPerProcess="1024"
             requestQueueLength="5000" />

    <!-- Make sure error responses are left untouched -->
    <httpErrors existingResponse="PassThrough" />
  </system.webServer>
</configuration> 